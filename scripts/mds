#!/bin/sh
#
# mds - start instance storage
#
# chkconfig:   - 63 37
# description: start instance storage

### BEGIN INIT INFO
# Provides: mds
# Required-Start: $local_fs $network
# Required-Stop: $local_fs
# Short-Description: start instance storage
# Description: start instance storage
### END INIT INFO

# Source function library.
. /etc/rc.d/init.d/functions

VOLGROUP=mysql
VOLUME=main

[ -e /etc/sysconfig/mds ] && . /etc/sysconfig/mds

dev_from_xvd() {
  printf "/dev/xvd"
  curl -s http://169.254.169.254/latest/meta-data/block-device-mapping/$1 | sed 's/sd//; s/[w-z]/w\0/' | tr a-z e-za-d 
}

already_mounted() {
  [ $(stat -c '%d' /var/lib/mysql) -ne $(stat -c '%d' /var/lib) ]
}

copy_data() {
  mount -t xfs $1 /mnt
  if [ ! -e /mnt/mysql ] ; then
    cp -a /var/lib/mysql/* /mnt
  fi
  umount /mnt
}

disk_from_xvds() {
  disks=""
  for i in "$@" ; do
    this_disk="$(dev_from_xvd $i)"
    disks="$disks $this_disk"
    if pvdisplay -s $this_disk > /dev/null ; then
      pvremove $this_disk >&2
    fi
    pvcreate $this_disk >&2
  done
  vgcreate $VOLGROUP $disks >&2
  # Stripe?
  lvcreate --name $VOLUME --extents 70%VG $VOLGROUP >&2
  mkfs -t xfs /dev/mapper/$VOLGROUP-$VOLUME >&2
  echo /dev/mapper/$VOLGROUP-$VOLUME
}

write_fstab() {
  if ! grep /var/lib/mysql /etc/fstab >/dev/null 2>/dev/null ; then
    echo $1 /var/lib/mysql xfs defaults 1 2 >> /etc/fstab
  fi
}



start() {
    set -e
    echo -n "Mounting instance storage: "
    if already_mounted ; then
      echo "already mounted."
      return 0
    fi
    disk_list=$(curl -s http://169.254.169.254/latest/meta-data/block-device-mapping/ | grep -v ami | grep -v root | grep -v swap)
    disk_count=$(echo $disk_list | wc -l)
    if [ $disk_count -eq 0 ] ; then
      echo "no disks."
      return 0
    fi

    disk=$(disk_from_xvds $disk_list)
    copy_data $disk
    write_fstab $disk
    mount $disk
    echo "done."
    return 0
}

stop() {
    echo -n $"Stopping $prog: "
    # stop it here, often "killproc $prog"
    retval=$?
    echo
    return $retval
}

restart() {
    stop
    start
}

reload() {
    restart
}

force_reload() {
    restart
}

rh_status() {
    # run checks to determine if the service is running or use generic status
    if already_mounted ; then
      echo "Instance storage already mounted."
      return 0
    else
      echo "Instance storage unavailable or not running."
      return 3
    fi
}

rh_status_q() {
    rh_status >/dev/null 2>&1
}


case "$1" in
    start)
        rh_status_q && exit 0
        $1
        ;;
    stop)
        rh_status_q || exit 0
        $1
        ;;
    restart)
        $1
        ;;
    reload)
        rh_status_q || exit 7
        $1
        ;;
    force-reload)
        force_reload
        ;;
    status)
        rh_status
        ;;
    condrestart|try-restart)
        rh_status_q || exit 0
        restart
        ;;
    *)
        echo $"Usage: $0 {start|stop|status|restart|condrestart|try-restart|reload|force-reload}"
        exit 2
esac
exit $?
